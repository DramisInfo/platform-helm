name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    name: Build and Test
    permissions:
      contents: write
      issues: write
      pull-requests: write
      statuses: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Task
        run: |
          sudo sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Run CI tasks
        run: task ci

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Helm chart
          path: ./platform-core-*.tgz
      # - name: Commit and push changes
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .
      #     git commit -m "Publish Helm chart"
      #     git push origin main

  release:
    runs-on: self-hosted
    name: Create Git Tag
    needs: test
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Helm chart
          path: ./

      - name: Extract version from .tgz file name
        id: extract_version
        run: |
          FILENAME=$(ls platform-core-*.tgz)
          VERSION=$(echo $FILENAME | sed -n 's/platform-core-\(.*\)\.tgz/\1/p')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push git tag
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

  update-platform-tools:
    runs-on: self-hosted
    name: Update platform-tools
    needs: release
    steps:
      - name: Checkout platform-tools repository
        uses: actions/checkout@v3
        with:
          repository: DramisInfo/platform-tools
          path: platform-tools
          token: ${{ secrets.GH_TOKEN }}

      - name: Update platform-core.yaml with new version
        env:
          NEW_VERSION: ${{ needs.release.outputs.version }}
        run: |
          sed -i "s/targetRevision: \".*\"/targetRevision: \"v$NEW_VERSION\"/" platform-tools/overlays/dev/patches/platform-core.yaml

      - name: Commit and push changes
        run: |
          cd platform-tools
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add overlays/dev/patches/platform-core.yaml
          git commit -m "Update platform-core to version v$NEW_VERSION"
          git push origin main
