name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test
    permissions:
      contents: write
      issues: write
      pull-requests: write
      statuses: write
      deployments: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Task
        run: |
          sudo sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Run CI tasks
        run: task ci

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Helm chart
          path: ./platform-core-*.tgz
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Publish Helm chart"
          git push origin main

  release:
    runs-on: self-hosted
    name: Publish Helm chart
    needs: test
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: Helm chart
          path: ./

      - name: List files
        run: ll

      - name: Publish Helm chart
        env:
          HELM_REPO_URL: ${{ secrets.HELM_REPO_URL }}
          HELM_REPO_USERNAME: ${{ secrets.HELM_REPO_USERNAME }}
          HELM_REPO_PASSWORD: ${{ secrets.HELM_REPO_PASSWORD }}
        run: |
          export HELM_EXPERIMENTAL_OCI=1
          echo $HELM_REPO_PASSWORD | helm registry login harbor.platform.dramisinfo.com --username $HELM_REPO_USERNAME --password-stdin
          helm push ./platform-core-*.tgz $HELM_REPO_URL

      - name: Extract version from .tgz file name
        id: extract_version
        run: |
          FILENAME=$(ls platform-core-*.tgz)
          VERSION=$(echo $FILENAME | sed -n 's/platform-core-\(.*\)\.tgz/\1/p')
          echo "::set-output name=version::$VERSION"

  update-platform-tools:
    runs-on: self-hosted
    name: Update platform-tools
    needs: release
    steps:
      - name: Checkout platform-tools repository
        uses: actions/checkout@v3
        with:
          repository: DramisInfo/platform-tools
          path: platform-tools
          token: ${{ secrets.GH_TOKEN }}

      - name: Update platform-core.yaml with new version
        run: |
          NEW_VERSION=$(cat ${{ steps.extract_version.outputs.version }})
          sed -i "s/targetRevision: \".*\"/targetRevision: \"$NEW_VERSION\"/" platform-tools/overlays/dev/patches/platform-core.yaml

      - name: Commit and push changes
        run: |
          cd platform-tools
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add overlays/dev/patches/platform-core.yaml
          git commit -m "Update platform-core to version $NEW_VERSION"
          git push origin main
